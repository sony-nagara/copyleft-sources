***** streaming test *******
.>> TestThread2246 java.lang.Thread run ()V Thread.java
..>> TestThread2246 Main$$ExternalSyntheticLambda0 run ()V D8$$SyntheticClass
...>> TestThread2246 Main lambda$testTracing$0 ()V Main.java
....>> TestThread2246 Main <init> ()V Main.java
.....>> TestThread2246 java.lang.Object <init> ()V Object.java
.....<< TestThread2246 java.lang.Object <init> ()V Object.java
....<< TestThread2246 Main <init> ()V Main.java
....>> TestThread2246 Main $noinline$doSomeWork ()V Main.java
.....>> TestThread2246 Main callOuterFunction ()V Main.java
......>> TestThread2246 Main callLeafFunction ()V Main.java
......<< TestThread2246 Main callLeafFunction ()V Main.java
.....<< TestThread2246 Main callOuterFunction ()V Main.java
.....>> TestThread2246 Main callLeafFunction ()V Main.java
.....<< TestThread2246 Main callLeafFunction ()V Main.java
....<< TestThread2246 Main $noinline$doSomeWork ()V Main.java
...<< TestThread2246 Main lambda$testTracing$0 ()V Main.java
..<< TestThread2246 Main$$ExternalSyntheticLambda0 run ()V D8$$SyntheticClass
.<< TestThread2246 java.lang.Thread run ()V Thread.java
.>> main Main main ([Ljava/lang/String;)V Main.java
..>> main Main testTracing (ZLBaseTraceParser;I)V Main.java
...>> main Main$VMDebug startMethodTracing (Ljava/lang/String;Ljava/io/FileDescriptor;IIZIZ)V Main.java
....>> main java.lang.reflect.Method invoke (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; Method.java
.....>> main dalvik.system.VMDebug startMethodTracing (Ljava/lang/String;Ljava/io/FileDescriptor;IIZIZ)V VMDebug.java
......>> main dalvik.system.VMDebug startMethodTracingFd (Ljava/lang/String;IIIZIZ)V VMDebug.java
......<< main dalvik.system.VMDebug startMethodTracingFd (Ljava/lang/String;IIIZIZ)V VMDebug.java
.....<< main dalvik.system.VMDebug startMethodTracing (Ljava/lang/String;Ljava/io/FileDescriptor;IIZIZ)V VMDebug.java
....<< main java.lang.reflect.Method invoke (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; Method.java
...<< main Main$VMDebug startMethodTracing (Ljava/lang/String;Ljava/io/FileDescriptor;IIZIZ)V Main.java
...>> main java.lang.Thread start ()V Thread.java
....>> main java.lang.ThreadGroup add (Ljava/lang/Thread;)V ThreadGroup.java
....<< main java.lang.ThreadGroup add (Ljava/lang/Thread;)V ThreadGroup.java
....>> main java.lang.Thread nativeCreate (Ljava/lang/Thread;JZ)V Thread.java
....<< main java.lang.Thread nativeCreate (Ljava/lang/Thread;JZ)V Thread.java
...<< main java.lang.Thread start ()V Thread.java
...>> main java.lang.Thread join ()V Thread.java
....>> main java.lang.Thread join (J)V Thread.java
.....>> main java.lang.System currentTimeMillis ()J System.java
.....<< main java.lang.System currentTimeMillis ()J System.java
.....>> main java.lang.Thread isAlive ()Z Thread.java
.....<< main java.lang.Thread isAlive ()Z Thread.java
.....>> main java.lang.Object wait (J)V Object.java
......>> main java.lang.Object wait (JI)V Object.java
......<< main java.lang.Object wait (JI)V Object.java
.....<< main java.lang.Object wait (J)V Object.java
.....>> main java.lang.Thread isAlive ()Z Thread.java
.....<< main java.lang.Thread isAlive ()Z Thread.java
....<< main java.lang.Thread join (J)V Thread.java
...<< main java.lang.Thread join ()V Thread.java
...>> main Main $noinline$doSomeWork ()V Main.java
....>> main Main callOuterFunction ()V Main.java
.....>> main Main callLeafFunction ()V Main.java
.....<< main Main callLeafFunction ()V Main.java
....<< main Main callOuterFunction ()V Main.java
....>> main Main callLeafFunction ()V Main.java
....<< main Main callLeafFunction ()V Main.java
...<< main Main $noinline$doSomeWork ()V Main.java
...>> main Main doSomeWorkThrow ()V Main.java
....>> main Main callThrowFunction ()V Main.java
.....>> main java.lang.Exception <init> (Ljava/lang/String;)V Exception.java
......>> main java.lang.Throwable <init> (Ljava/lang/String;)V Throwable.java
.......>> main java.lang.Object <init> ()V Object.java
.......<< main java.lang.Object <init> ()V Object.java
.......>> main java.util.Collections emptyList ()Ljava/util/List; Collections.java
.......<< main java.util.Collections emptyList ()Ljava/util/List; Collections.java
.......>> main java.lang.Throwable fillInStackTrace ()Ljava/lang/Throwable; Throwable.java
........>> main java.lang.Throwable nativeFillInStackTrace ()Ljava/lang/Object; Throwable.java
........<< main java.lang.Throwable nativeFillInStackTrace ()Ljava/lang/Object; Throwable.java
.......<< main java.lang.Throwable fillInStackTrace ()Ljava/lang/Throwable; Throwable.java
......<< main java.lang.Throwable <init> (Ljava/lang/String;)V Throwable.java
.....<< main java.lang.Exception <init> (Ljava/lang/String;)V Exception.java
....<<E main Main callThrowFunction ()V Main.java
...<< main Main doSomeWorkThrow ()V Main.java
...>> main Main$VMDebug $noinline$stopMethodTracing ()V Main.java
***** non streaming test *******
.>> TestThread2246 java.lang.Thread	run	()V	Thread.java
..>> TestThread2246 Main$$ExternalSyntheticLambda0	run	()V	D8$$SyntheticClass
...>> TestThread2246 Main	lambda$testTracing$0	()V	Main.java
....>> TestThread2246 Main	<init>	()V	Main.java
.....>> TestThread2246 java.lang.Object	<init>	()V	Object.java
.....<< TestThread2246 java.lang.Object	<init>	()V	Object.java
....<< TestThread2246 Main	<init>	()V	Main.java
....>> TestThread2246 Main	$noinline$doSomeWork	()V	Main.java
.....>> TestThread2246 Main	callOuterFunction	()V	Main.java
......>> TestThread2246 Main	callLeafFunction	()V	Main.java
......<< TestThread2246 Main	callLeafFunction	()V	Main.java
.....<< TestThread2246 Main	callOuterFunction	()V	Main.java
.....>> TestThread2246 Main	callLeafFunction	()V	Main.java
.....<< TestThread2246 Main	callLeafFunction	()V	Main.java
....<< TestThread2246 Main	$noinline$doSomeWork	()V	Main.java
...<< TestThread2246 Main	lambda$testTracing$0	()V	Main.java
..<< TestThread2246 Main$$ExternalSyntheticLambda0	run	()V	D8$$SyntheticClass
.<< TestThread2246 java.lang.Thread	run	()V	Thread.java
.>> TestThread2246 java.lang.ThreadGroup	threadTerminated	(Ljava/lang/Thread;)V	ThreadGroup.java
..>> TestThread2246 java.lang.ThreadGroup	remove	(Ljava/lang/Thread;)V	ThreadGroup.java
...>> TestThread2246 java.lang.System	arraycopy	(Ljava/lang/Object;ILjava/lang/Object;II)V	System.java
...<< TestThread2246 java.lang.System	arraycopy	(Ljava/lang/Object;ILjava/lang/Object;II)V	System.java
..<< TestThread2246 java.lang.ThreadGroup	remove	(Ljava/lang/Thread;)V	ThreadGroup.java
.<< TestThread2246 java.lang.ThreadGroup	threadTerminated	(Ljava/lang/Thread;)V	ThreadGroup.java
.>> main Main	main	([Ljava/lang/String;)V	Main.java
..>> main Main	testTracing	(ZLBaseTraceParser;I)V	Main.java
...>> main Main$VMDebug	startMethodTracing	(Ljava/lang/String;Ljava/io/FileDescriptor;IIZIZ)V	Main.java
....>> main java.lang.reflect.Method	invoke	(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;	Method.java
.....>> main dalvik.system.VMDebug	startMethodTracing	(Ljava/lang/String;Ljava/io/FileDescriptor;IIZIZ)V	VMDebug.java
......>> main dalvik.system.VMDebug	startMethodTracingFd	(Ljava/lang/String;IIIZIZ)V	VMDebug.java
......<< main dalvik.system.VMDebug	startMethodTracingFd	(Ljava/lang/String;IIIZIZ)V	VMDebug.java
.....<< main dalvik.system.VMDebug	startMethodTracing	(Ljava/lang/String;Ljava/io/FileDescriptor;IIZIZ)V	VMDebug.java
....<< main java.lang.reflect.Method	invoke	(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;	Method.java
...<< main Main$VMDebug	startMethodTracing	(Ljava/lang/String;Ljava/io/FileDescriptor;IIZIZ)V	Main.java
...>> main java.lang.Thread	start	()V	Thread.java
....>> main java.lang.ThreadGroup	add	(Ljava/lang/Thread;)V	ThreadGroup.java
....<< main java.lang.ThreadGroup	add	(Ljava/lang/Thread;)V	ThreadGroup.java
....>> main java.lang.Thread	nativeCreate	(Ljava/lang/Thread;JZ)V	Thread.java
....<< main java.lang.Thread	nativeCreate	(Ljava/lang/Thread;JZ)V	Thread.java
...<< main java.lang.Thread	start	()V	Thread.java
...>> main java.lang.Thread	join	()V	Thread.java
....>> main java.lang.Thread	join	(J)V	Thread.java
.....>> main java.lang.System	currentTimeMillis	()J	System.java
.....<< main java.lang.System	currentTimeMillis	()J	System.java
.....>> main java.lang.Thread	isAlive	()Z	Thread.java
.....<< main java.lang.Thread	isAlive	()Z	Thread.java
.....>> main java.lang.Object	wait	(J)V	Object.java
......>> main java.lang.Object	wait	(JI)V	Object.java
......<< main java.lang.Object	wait	(JI)V	Object.java
.....<< main java.lang.Object	wait	(J)V	Object.java
.....>> main java.lang.Thread	isAlive	()Z	Thread.java
.....<< main java.lang.Thread	isAlive	()Z	Thread.java
....<< main java.lang.Thread	join	(J)V	Thread.java
...<< main java.lang.Thread	join	()V	Thread.java
...>> main Main	$noinline$doSomeWork	()V	Main.java
....>> main Main	callOuterFunction	()V	Main.java
.....>> main Main	callLeafFunction	()V	Main.java
.....<< main Main	callLeafFunction	()V	Main.java
....<< main Main	callOuterFunction	()V	Main.java
....>> main Main	callLeafFunction	()V	Main.java
....<< main Main	callLeafFunction	()V	Main.java
...<< main Main	$noinline$doSomeWork	()V	Main.java
...>> main Main	doSomeWorkThrow	()V	Main.java
....>> main Main	callThrowFunction	()V	Main.java
.....>> main java.lang.Exception	<init>	(Ljava/lang/String;)V	Exception.java
......>> main java.lang.Throwable	<init>	(Ljava/lang/String;)V	Throwable.java
.......>> main java.lang.Object	<init>	()V	Object.java
.......<< main java.lang.Object	<init>	()V	Object.java
.......>> main java.util.Collections	emptyList	()Ljava/util/List;	Collections.java
.......<< main java.util.Collections	emptyList	()Ljava/util/List;	Collections.java
.......>> main java.lang.Throwable	fillInStackTrace	()Ljava/lang/Throwable;	Throwable.java
........>> main java.lang.Throwable	nativeFillInStackTrace	()Ljava/lang/Object;	Throwable.java
........<< main java.lang.Throwable	nativeFillInStackTrace	()Ljava/lang/Object;	Throwable.java
.......<< main java.lang.Throwable	fillInStackTrace	()Ljava/lang/Throwable;	Throwable.java
......<< main java.lang.Throwable	<init>	(Ljava/lang/String;)V	Throwable.java
.....<< main java.lang.Exception	<init>	(Ljava/lang/String;)V	Exception.java
....<<E main Main	callThrowFunction	()V	Main.java
...<< main Main	doSomeWorkThrow	()V	Main.java
...>> main Main$VMDebug	$noinline$stopMethodTracing	()V	Main.java
....>> main java.lang.reflect.Method	invoke	(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;	Method.java
.....>> main dalvik.system.VMDebug	stopMethodTracing	()V	VMDebug.java
